{
  "openapi": "3.0.1",
  "info": {
    "title": "Terraform-Boot API",
    "description": "RESTful Services to interact with Terraform-Boot runtime",
    "version": "1.0.5-SNAPSHOT"
  },
  "servers": [
    {
      "url": "http://localhost:9090",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "OAuth2Flow": [
        "openid"
      ]
    }
  ],
  "tags": [
    {
      "name": "TerraformFromScripts",
      "description": "APIs for running Terraform commands on the scripts sent via request body."
    },
    {
      "name": "Admin",
      "description": "Admin services for managing the application."
    },
    {
      "name": "TerraformFromDirectory",
      "description": "APIs for running Terraform commands inside a provided directory."
    },
    {
      "name": "TerraformFromGitRepo",
      "description": "APIs for running Terraform commands using Terraform scripts from a GIT Repo."
    }
  ],
  "paths": {
    "/terraform-boot/scripts/validate": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "validateWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/plan": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Get Terraform Plan as JSON string from the list of script files provided",
        "operationId": "planWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformPlanWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/modify": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Modify resources via Terraform",
        "operationId": "modifyWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformModifyWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/modify/async": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "async modify resources via Terraform",
        "operationId": "asyncModifyWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncModifyFromScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/scripts/destroy": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Destroy resources via Terraform",
        "operationId": "destroyWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDestroyWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/deploy": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deployWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployWithScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/deploy/async": {
      "post": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncDeployWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDeployFromScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/git/validate": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "validateScriptsFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/git/plan": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Get Terraform Plan as JSON string from the list of script files provided",
        "operationId": "planFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformPlanFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/git/modify": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Modify resources via Terraform",
        "operationId": "modifyFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformModifyFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/git/modify/async": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncModifyFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncModifyFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/git/destroy": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Destroy resources via Terraform",
        "operationId": "destroyFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDestroyFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/git/deploy": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Deploy resources via Terraform",
        "operationId": "deployFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/git/deploy/async": {
      "post": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "async deploy resources via Terraform",
        "operationId": "asyncDeployFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDeployFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/directory/plan/{module_directory}": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Get Terraform Plan as JSON string from the given directory.",
        "operationId": "plan",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformPlanFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformPlan"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/directory/modify/{module_directory}": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Modify resources via Terraform from the given directory.",
        "operationId": "modifyFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformModifyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/directory/modify/async/{module_directory}": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async modify resources via Terraform from the given directory.",
        "operationId": "asyncModifyFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncModifyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/directory/deploy/{module_directory}": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Deploy resources via Terraform from the given directory.",
        "operationId": "deployFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDeployFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/directory/deploy/async/{module_directory}": {
      "post": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async deploy resources via Terraform from the given directory.",
        "operationId": "asyncDeployFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDeployFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/health": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "Check health of Terraform Boot API service",
        "operationId": "healthCheck",
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformBootSystemStatus"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/directory/validate/{module_directory}": {
      "get": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Validate the Terraform modules in the given directory.",
        "operationId": "validateFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformValidationResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/scripts/destroy/async": {
      "delete": {
        "tags": [
          "TerraformFromScripts"
        ],
        "description": "Async destroy the Terraform modules",
        "operationId": "asyncDestroyWithScripts",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDestroyFromScriptsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/git/destroy/async": {
      "delete": {
        "tags": [
          "TerraformFromGitRepo"
        ],
        "description": "Async destroy the Terraform modules",
        "operationId": "asyncDestroyFromGitRepo",
        "parameters": [
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDestroyFromGitRepoRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/terraform-boot/directory/destroy/{module_directory}": {
      "delete": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "Destroy the resources from the given directory.",
        "operationId": "destroyFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformDestroyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TerraformResult"
                }
              }
            }
          }
        }
      }
    },
    "/terraform-boot/directory/destroy/async/{module_directory}": {
      "delete": {
        "tags": [
          "TerraformFromDirectory"
        ],
        "description": "async destroy resources via Terraform from the given directory.",
        "operationId": "asyncDestroyFromDirectory",
        "parameters": [
          {
            "name": "module_directory",
            "in": "path",
            "description": "directory name where the Terraform module files exist.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Custom-RequestId",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TerraformAsyncDestroyFromDirectoryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "422": {
            "description": "Unprocessable Entity",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Response": {
        "required": [
          "details",
          "resultType",
          "success"
        ],
        "type": "object",
        "properties": {
          "resultType": {
            "type": "string",
            "description": "The result code of response.",
            "enum": [
              "Parameters Invalid",
              "Unprocessable Entity",
              "Terraform Execution Failed",
              "Unsupported Enum Value",
              "Service Unavailable",
              "Unauthorized",
              "Invalid Git Repo Details"
            ]
          },
          "details": {
            "type": "array",
            "description": "Details of the errors occurred",
            "items": {
              "type": "string",
              "description": "Details of the errors occurred"
            }
          },
          "success": {
            "type": "boolean",
            "description": "Describes if the request is successful"
          }
        }
      },
      "TerraformDeployWithScriptsRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of Terraform script files to be considered for deploying changes.",
            "items": {
              "type": "string",
              "description": "List of Terraform script files to be considered for deploying changes."
            }
          }
        }
      },
      "TerraformValidateDiagnostics": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "string"
          }
        }
      },
      "TerraformValidationResult": {
        "type": "object",
        "properties": {
          "valid": {
            "type": "boolean"
          },
          "diagnostics": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TerraformValidateDiagnostics"
            }
          }
        }
      },
      "TerraformPlanWithScriptsRequest": {
        "required": [
          "scripts",
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of terraform script files to be considered for generating terraform plan",
            "items": {
              "type": "string",
              "description": "List of terraform script files to be considered for generating terraform plan"
            }
          }
        }
      },
      "TerraformPlan": {
        "required": [
          "plan"
        ],
        "type": "object",
        "properties": {
          "plan": {
            "type": "string",
            "description": "Terraform plan as a JSON string"
          }
        }
      },
      "TerraformModifyWithScriptsRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "tfState",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          }
        }
      },
      "TerraformResult": {
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "This value is set only if the same is set in the request as well. This is useful only for the caller to differentiate what type of destroy it is. No difference in the way destroy will be executed.based on this flag. User may use this flag in case callback are used. So the calling application can know the result is for which specific destroy use case within the calling system.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "commandStdOutput": {
            "type": "string",
            "description": "stdout of the command returned as string."
          },
          "commandStdError": {
            "type": "string",
            "description": "stderr of the command returned as string."
          },
          "terraformState": {
            "type": "string",
            "description": ".tfstate file contents returned as string."
          },
          "importantFileContentMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Data of all other files generated by the terraform execution.The map key contains the file name and value is the file contents as string."
            },
            "description": "Data of all other files generated by the terraform execution.The map key contains the file name and value is the file contents as string."
          },
          "commandSuccessful": {
            "type": "boolean"
          }
        }
      },
      "TerraformAsyncModifyFromScriptsRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "tfState",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "WebhookConfig": {
        "required": [
          "authType",
          "url"
        ],
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "Callback address after deployment/destroy is completed."
          },
          "authType": {
            "type": "string",
            "description": "The permission type when calling back.",
            "enum": [
              "NONE",
              "OAUTH2"
            ]
          }
        },
        "description": "Configuration information of webhook."
      },
      "TerraformDestroyWithScriptsRequest": {
        "required": [
          "scripts",
          "tfState",
          "variables"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          }
        }
      },
      "TerraformAsyncDeployFromScriptsRequest": {
        "required": [
          "isPlanOnly",
          "scripts",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of Terraform script files to be considered for deploying changes.",
            "items": {
              "type": "string",
              "description": "List of Terraform script files to be considered for deploying changes."
            }
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformDeployFromGitRepoRequest": {
        "required": [
          "gitRepoDetails",
          "isPlanOnly",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          }
        }
      },
      "TerraformScriptGitRepoDetails": {
        "required": [
          "branch",
          "repoUrl"
        ],
        "type": "object",
        "properties": {
          "repoUrl": {
            "type": "string",
            "description": "url of the GIT repo. This repo will be cloned."
          },
          "branch": {
            "type": "string",
            "description": "Branch to be checked-out after the repo is cloned."
          },
          "scriptPath": {
            "type": "string",
            "description": "Location of the scripts. If not provided, the scripts will be executed from root folder of the repo."
          }
        },
        "description": "GIT Repo details from where the scripts can be fetched."
      },
      "TerraformPlanFromGitRepoRequest": {
        "required": [
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          }
        }
      },
      "TerraformModifyFromGitRepoRequest": {
        "required": [
          "isPlanOnly",
          "tfState",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          }
        }
      },
      "TerraformAsyncModifyFromGitRepoRequest": {
        "required": [
          "isPlanOnly",
          "tfState",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformDestroyFromGitRepoRequest": {
        "required": [
          "tfState",
          "variables"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          }
        }
      },
      "TerraformAsyncDeployFromGitRepoRequest": {
        "required": [
          "gitRepoDetails",
          "isPlanOnly",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformPlanFromDirectoryRequest": {
        "required": [
          "variables"
        ],
        "type": "object",
        "properties": {
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformModifyFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformAsyncModifyFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformDeployFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "variables"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformAsyncDeployFromDirectoryRequest": {
        "required": [
          "isPlanOnly",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "isPlanOnly": {
            "type": "boolean",
            "description": "Flag to control if the deployment must only generate the terraform or it must also apply the changes."
          },
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformBootSystemStatus": {
        "required": [
          "healthStatus"
        ],
        "type": "object",
        "properties": {
          "healthStatus": {
            "type": "string",
            "description": "The health status of Xpanse api service.",
            "enum": [
              "OK",
              "NOK"
            ]
          }
        }
      },
      "TerraformAsyncDestroyFromScriptsRequest": {
        "required": [
          "scripts",
          "tfState",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "scripts": {
            "type": "array",
            "description": "List of script files for destroy requests deployed via scripts",
            "items": {
              "type": "string",
              "description": "List of script files for destroy requests deployed via scripts"
            }
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformAsyncDestroyFromGitRepoRequest": {
        "required": [
          "tfState",
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "gitRepoDetails": {
            "$ref": "#/components/schemas/TerraformScriptGitRepoDetails"
          },
          "tfState": {
            "type": "string",
            "description": "The .tfState file content after deployment"
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      },
      "TerraformDestroyFromDirectoryRequest": {
        "required": [
          "variables"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          }
        }
      },
      "TerraformAsyncDestroyFromDirectoryRequest": {
        "required": [
          "variables",
          "webhookConfig"
        ],
        "type": "object",
        "properties": {
          "deploymentScenario": {
            "type": "string",
            "description": "The deployment scenario when the Xpanse client send the destroy request. Valid values: deploy,modify,destroy,rollback,purge.",
            "enum": [
              "deploy",
              "modify",
              "destroy",
              "rollback",
              "purge"
            ]
          },
          "variables": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
            },
            "description": "Key-value pairs of regular variables that must be used to execute the Terraform request."
          },
          "envVariables": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
            },
            "description": "Key-value pairs of variables that must be injected as environment variables to terraform process."
          },
          "webhookConfig": {
            "$ref": "#/components/schemas/WebhookConfig"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2Flow": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://iam.xpanse.site/oauth/v2/authorize",
            "tokenUrl": "https://iam.xpanse.site/oauth/v2/token",
            "scopes": {
              "openid": "mandatory must be selected."
            }
          }
        }
      }
    }
  }
}